XGBoost Naive

#1 Try:
{
    'booster': ['gbtree'],
    'objective': ['multi:softmax'],
    'num_class': [len(le.classes_)],
    'eval_metric': ['mlogloss'],
    'learning_rate': [0.1, 0.2, 0.3],
    'n_estimators': [100],
    'max_depth': [3, 4, 5],
    'min_child_weight': [2, 3, 4],
    'gamma': [0.01, 0.001, 0.0001],
    'subsample': [0.4, 0.5, 0.6],
    'colsample_bytree': [0.1, 0.5, 1],
    'reg_alpha': [0.00005, 0.0001, 0.00015],
    'seed': [SEED],
    'device': ['cuda']
}

{
    'booster': 'gbtree', 
    'colsample_bytree': 0.1, 
    'device': 'cuda', 
    'eval_metric': 'mlogloss', 
    'gamma': 0.01, 
    'learning_rate': 0.1, 
    'max_depth': 5, 
    'min_child_weight': 4, 
    'n_estimators': 100, 
    'num_class': 80, 
    'objective': 
    'multi:softmax', 
    'reg_alpha': 5e-05, 
    'seed': 12345, 
    'subsample': 0.5
}




#2 Try::
{
    'booster': ['gbtree'],
    'objective': ['multi:softmax'],
    'num_class': [len(le.classes_)],
    'eval_metric': ['mlogloss'],
    'learning_rate': [0.001, 0.01, 0.1],
    'n_estimators': [100],
    'max_depth': [5, 6, 7],
    'min_child_weight': [4, 5, 6],
    'gamma': [0.01, 0.015, 0.02],
    'subsample': [0.5],
    'colsample_bytree': [0.01, 0.1, 0.15],
    'reg_alpha': [0.00005],
    'seed': [SEED],
    'device': ['cuda']
}

{
    'booster': 'gbtree', 
    'colsample_bytree': 0.15, 
    'device': 'cuda', 
    'eval_metric': 'mlogloss', 
    'gamma': 0.015, 
    'learning_rate': 0.1, 
    'max_depth': 7, 
    'min_child_weight': 6, 
    'n_estimators': 100, 
    'num_class': 80, 
    'objective': 'multi:softmax', 
    'reg_alpha': 5e-05, 
    'seed': 12345, 
    'subsample': 0.5
}




#3 Try::
{
    'booster': ['gbtree'],
    'objective': ['multi:softmax'],
    'num_class': [len(le.classes_)],
    'eval_metric': ['mlogloss'],
    'learning_rate': [0.1],
    'n_estimators': [100],
    'max_depth': [7, 8, 9],
    'min_child_weight': [6, 7, 8],
    'gamma': [0.015, 0.0155],
    'subsample': [0.5],
    'colsample_bytree': [0.15, 0.2, 0.3],
    'reg_alpha': [0.00005],
    'seed': [SEED],
    'device': ['cuda']
}

{
    'booster': 'gbtree', 
    'colsample_bytree': 0.2, 
    'device': 'cuda', 
    'eval_metric': 'mlogloss', 
    'gamma': 0.015, 
    'learning_rate': 0.1, 
    'max_depth': 9, 
    'min_child_weight': 8, 
    'n_estimators': 100, 
    'num_class': 80, 
    'objective': 'multi:softmax', 
    'reg_alpha': 5e-05, 
    'seed': 12345, 
    'subsample': 0.5
}




FINAL:
{
    'booster': 'gbtree', 
    'colsample_bytree': 0.2, 
    'device': 'cuda', 
    'eval_metric': 'mlogloss', 
    'gamma': 0.015, 
    'learning_rate': 0.1, 
    'max_depth': 9, 
    'min_child_weight': 8, 
    'n_estimators': 100, 
    'num_class': 80, 
    'objective': 'multi:softmax', 
    'reg_alpha': 5e-05, 
    'seed': 12345, 
    'subsample': 0.5
}